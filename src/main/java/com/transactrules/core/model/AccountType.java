package com.transactrules.core.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@DynamoDBTable(tableName = "AccountType")
public class AccountType {

    private String id;
    private String name;


    private List<PositionType> positionTypes = new ArrayList<>();
    private List<DateType> dateTypes = new ArrayList<>();
    private List<ScheduleType> scheduleTypes = new ArrayList<>();
    private List<TransactionType> transactionTypes = new ArrayList<>();

    public AccountType(){

    }

    public AccountType(String name) {
        this.name = name;
    }

    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @DynamoDBAttribute
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @DynamoDBAttribute
    public List<PositionType> getPositionTypes() {
        return positionTypes;
    }

    public void setPositionTypes(List<PositionType> positionTypes) {
        this.positionTypes = positionTypes;
    }

    @DynamoDBAttribute
    public List<TransactionType> getTransactionTypes() {
        return transactionTypes;
    }

    public void setTransactionTypes(List<TransactionType> transactionTypes) {
        this.transactionTypes = transactionTypes;
    }

    public PositionType addPositionType(String name){
        PositionType postionType = new PositionType(name);
        positionTypes.add(postionType);
        return postionType;
    }

    @DynamoDBAttribute
    public List<DateType> getDateTypes() {
        return dateTypes;
    }

    public void setDateTypes(List<DateType> dateTypes) {
        this.dateTypes = dateTypes;
    }

    @DynamoDBAttribute
    public List<ScheduleType> getScheduleTypes() {
        return scheduleTypes;
    }

    public void setScheduleTypes(List<ScheduleType> scheduleTypes) {
        this.scheduleTypes = scheduleTypes;
    }

    public DateType addDateType(String name){
        DateType postionType = new DateType(name);
        dateTypes.add(postionType);
        return postionType;
    }

    public ScheduleType addCalculatedScheduleType(String name,
                                                  ScheduleFrequency frequency,
                                                  ScheduleEndType endType,
                                                  String startDateExpression,
                                                  String endDateExpression,
                                                  String numberOfRepeatsExpression,
                                                  String intervalExpression){

        ScheduleType scheduleType = new ScheduleType( name, frequency,endType, startDateExpression, endDateExpression,numberOfRepeatsExpression,intervalExpression,true);

        scheduleTypes.add(scheduleType);

        return  scheduleType;
    }

    public ScheduleType addUserInputScheduleType(String name,
                                                ScheduleFrequency frequency,
                                                ScheduleEndType endType,
                                                String startDateExpression,
                                                String endDateExpression,
                                                String numberOfRepeatsExpression,
                                                String intervalExpression){

        ScheduleType scheduleType = new ScheduleType( name, frequency,endType, startDateExpression, endDateExpression,numberOfRepeatsExpression,intervalExpression,false);

        scheduleTypes.add(scheduleType);

        return  scheduleType;
    }

    public TransactionType addTransactionType(String name, boolean hasMaximumPrecission){
        TransactionType transactionType = new TransactionType(name, hasMaximumPrecission);
        transactionTypes.add(transactionType);

        return transactionType;
    }

    public TransactionType addTransactionType(String name){
        TransactionType transactionType = new TransactionType(name, false);
        transactionTypes.add(transactionType);

        return transactionType;
    }

    public Optional<TransactionType> getTransactionTypeByName(String name){
        return transactionTypes.stream().filter(tt->tt.getName().equalsIgnoreCase(name)).findFirst();
    }

    public Optional<PositionType> getPositionTypeByName(String name){
        return positionTypes.stream().filter(pt->pt.getName().equalsIgnoreCase(name)).findFirst();
    }



}
